function ProcessLogger() {

}

const util = require('util');

ProcessLogger.prototype.performio = function(method, args) {
    try {

        process.send({
            channel: "log",
            data: {
                method: method,
                contents: args.map((arg) =>
                {
                    if (typeof arg === 'object')
                    {
                        return util.inspect(arg);//.bind(util);
                    }
                    else
                    {
                        return arg;
                    }
                })
            }
        });
    } catch(e){
        process.send({
            channel: "log",
            data: {
                method: method,
                contents: ["could not parse the logged output", e]
            }
        });
    }

}

ProcessLogger.prototype.log = function() {
    var args = [].slice.call(arguments);
    this.performio("log", args);
}

ProcessLogger.prototype.error = function() {
    var args = [].slice.call(arguments);
    this.performio("error", args);
}

ProcessLogger.prototype.warn = function() {
    var args = [].slice.call(arguments);
    this.performio("error", args);
}

module.exports = ProcessLogger;
