files:
  "/home/ec2-user/custom-nginx.conf" :
    mode: "000755"
    owner: root
    group: root
    content: |
      upstream adminpanel {
          server 127.0.0.1:8081;
          keepalive 256;
      }

      upstream website {
          server 127.0.0.1:8082;
          keepalive 256;
      }

      upstream api {
          server 127.0.0.1:3000;
          keepalive 256;
      }

      server {
          listen 8080;
          server_name mydomain.com www.mydomain.com;

          if ($host = 'www.mydomain.com') {
              return 302 https://mydomain.com$request_uri;
          }

          # what about that https? the traffic is all http right now
          # but elastic load balancer tells us about the original scheme
          # using $http_x_forwarded_proto variable

          if ($http_x_forwarded_proto != 'https') {
              return 302 https://mydomain.com$request_uri;
          }

          location / {
              proxy_pass  http://website;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          gzip on;
          gzip_comp_level 4;
          gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


          location /public {
              alias /var/app/current/public;
          }
      }

      server {
          listen 8080;
          server_name api.mydomain.com;


          # what about that https? the traffic is all http right now
          # but elastic load balancer tells us about the original scheme
          # using $http_x_forwarded_proto variable

          if ($http_x_forwarded_proto != 'https') {
              return 302 https://api.mydomain.com$request_uri;
          }

          location / {
              client_max_body_size 100M;
              proxy_pass  http://api;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

      }



      server {
          listen 8080;
          server_name admin.mydomain.com;

          # what about that https? the traffic is all http right now
          # but elastic load balancer tells us about the original scheme
          # using $http_x_forwarded_proto variable

          if ($http_x_forwarded_proto != 'https') {
              return 302 https://admin.mydomain.com$request_uri;
          }

          location / {
              client_max_body_size 100M;
              proxy_pass  http://adminpanel;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

      }

container_commands:
  01-replace-default-nginx-config:
    command: mv -f /home/ec2-user/custom-nginx.conf /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf
